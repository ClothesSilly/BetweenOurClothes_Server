<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.betweenourclothes.web.ClosetsApiControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-11-11T17:04:46" hostname="user" time="1.798">
  <properties/>
  <testcase name="내옷장_게시글ID로불러오기" classname="com.betweenourclothes.web.ClosetsApiControllerTest" time="1.798"/>
  <system-out><![CDATA[02:04:39.351 [Test worker] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.355 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
02:04:39.362 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
02:04:39.376 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.betweenourclothes.web.ClosetsApiControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
02:04:39.383 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.betweenourclothes.web.ClosetsApiControllerTest], using SpringBootContextLoader
02:04:39.386 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.betweenourclothes.web.ClosetsApiControllerTest]: class path resource [com/betweenourclothes/web/ClosetsApiControllerTest-context.xml] does not exist
02:04:39.386 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.betweenourclothes.web.ClosetsApiControllerTest]: class path resource [com/betweenourclothes/web/ClosetsApiControllerTestContext.groovy] does not exist
02:04:39.386 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.betweenourclothes.web.ClosetsApiControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
02:04:39.388 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.betweenourclothes.web.ClosetsApiControllerTest]: ClosetsApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
02:04:39.417 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.509 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\user1\Desktop\송아\캡스톤\repo\between-our-clothes-server\build\classes\java\main\com\betweenourclothes\Application.class]
02:04:39.510 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.betweenourclothes.Application for test class com.betweenourclothes.web.ClosetsApiControllerTest
02:04:39.585 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.betweenourclothes.web.ClosetsApiControllerTest]: using defaults.
02:04:39.585 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
02:04:39.601 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@48f14ce6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7d348f95, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@506c3269, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@37831685, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7557faef, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2c469bf7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d881b6c, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@32901166, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@78da1559, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@605bb096, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3d55848a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@ffca967, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@27a4051c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1a46de7e]
02:04:39.605 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.606 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.613 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.613 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.614 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.614 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.618 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6714ac4 testClass = ClosetsApiControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54d0aef testClass = ClosetsApiControllerTest, locations = '{}', classes = '{class com.betweenourclothes.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bf27406, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3331819, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5f8e6533, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31b08d18], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]], class annotated with @DirtiesContext [false] with mode [null].
02:04:39.619 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.619 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.ClosetsApiControllerTest]
02:04:39.622 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6714ac4 testClass = ClosetsApiControllerTest, testInstance = com.betweenourclothes.web.ClosetsApiControllerTest@7b629468, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54d0aef testClass = ClosetsApiControllerTest, locations = '{}', classes = '{class com.betweenourclothes.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bf27406, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3331819, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5f8e6533, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31b08d18], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]].
02:04:39.637 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.7.RELEASE)

2022-11-12 02:04:39.810  INFO 8004 --- [    Test worker] c.b.web.ClosetsApiControllerTest         : Starting ClosetsApiControllerTest on user with PID 8004 (started by user1 in C:\Users\user1\Desktop\송아\캡스톤\repo\between-our-clothes-server)
2022-11-12 02:04:39.811  INFO 8004 --- [    Test worker] c.b.web.ClosetsApiControllerTest         : No active profile set, falling back to default profiles: default
2022-11-12 02:04:40.702  INFO 8004 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-12 02:04:40.842  INFO 8004 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 129ms. Found 15 repository interfaces.
2022-11-12 02:04:41.207  INFO 8004 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cbe229c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-12 02:04:41.493  INFO 8004 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-12 02:04:41.515  INFO 8004 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-11-12 02:04:41.515  INFO 8004 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.22]
2022-11-12 02:04:41.665  INFO 8004 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-11-12 02:04:41.665  INFO 8004 --- [    Test worker] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1839 ms
2022-11-12 02:04:41.891  INFO 8004 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-11-12 02:04:42.379  INFO 8004 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-11-12 02:04:42.446  INFO 8004 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2022-11-12 02:04:42.501  INFO 8004 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2022-11-12 02:04:42.502  INFO 8004 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2022-11-12 02:04:42.644  INFO 8004 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2022-11-12 02:04:42.785  INFO 8004 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2022-11-12 02:04:44.266  INFO 8004 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-11-12 02:04:44.876  INFO 8004 --- [    Test worker] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2022-11-12 02:04:45.288  WARN 8004 --- [    Test worker] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-11-12 02:04:45.845  INFO 8004 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@3cc53240, []
2022-11-12 02:04:45.907  INFO 8004 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a41442c, org.springframework.security.web.context.SecurityContextPersistenceFilter@29ecbce4, org.springframework.security.web.header.HeaderWriterFilter@316eaf5, org.springframework.security.web.authentication.logout.LogoutFilter@6f1129f2, com.betweenourclothes.jwt.JwtAuthenticationFilter@fe60a94, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54057b7a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c80c8ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48e50cb8, org.springframework.security.web.session.SessionManagementFilter@6d828faf, org.springframework.security.web.access.ExceptionTranslationFilter@5974b048, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2552972b]
2022-11-12 02:04:45.960  INFO 8004 --- [    Test worker] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2022-11-12 02:04:46.225  INFO 8004 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2022-11-12 02:04:46.492  INFO 8004 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2022-11-12 02:04:46.510  INFO 8004 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2022-11-12 02:04:46.538  INFO 8004 --- [    Test worker] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2022-11-12 02:04:46.711  INFO 8004 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: deleteUsingDELETE_1
2022-11-12 02:04:46.729  INFO 8004 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: findPostByIdUsingGET_1
2022-11-12 02:04:46.734  INFO 8004 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: findPostsByAllCategoryUsingGET_1
2022-11-12 02:04:46.754  INFO 8004 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: postUsingPOST_1
2022-11-12 02:04:46.758  INFO 8004 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPATCH_1
2022-11-12 02:04:46.787  INFO 8004 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63051 (http) with context path ''
2022-11-12 02:04:46.789  INFO 8004 --- [    Test worker] c.b.web.ClosetsApiControllerTest         : Started ClosetsApiControllerTest in 7.151 seconds (JVM running for 7.938)
2022-11-12 02:04:46.926  INFO 8004 --- [o-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-12 02:04:46.926  INFO 8004 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-11-12 02:04:46.943  INFO 8004 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    update
        members 
    set
        email=?,
        image=?,
        name=?,
        nickname=?,
        password=?,
        phone=?,
        refresh_token=?,
        role=? 
    where
        id=?
2022-11-12 02:04:47.351  INFO 8004 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-11-12 02:04:47.351  INFO 8004 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-11-12 02:04:47.354  INFO 8004 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-3907f956-4fa3-482a-8b15-478734fad9b0.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-d4532aeb-1e37-49fb-9e23-dfcdfef2e9e2.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        closets
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-fc351d41-92a6-493a-9e2a-576c1de96a1f.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-03dd863b-9438-44df-8cac-2e78199ee6e5.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        closets
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-a47564cb-b582-4d5d-a9f4-fb92ebc398c8.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-fce1f902-1bcb-4c76-9a2b-ffb7abcdbd58.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        closets
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-b96ebf5d-f774-4379-ab73-e5e54b5a7799.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-717f5d7a-f80d-445a-99d8-bb323a8d8727.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        closets
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-7db31190-5bcb-409d-b44c-2d467b52bebe.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
test.jpg
C:\Users\user1\betweenourclothes\images\closets\closets-bd1a06f9-1a40-4ead-abcf-421e881013fa.jpg
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        closets
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    select
        closets0_.id as id1_1_,
        closets0_.created_date as created_2_1_,
        closets0_.modified_date as modified3_1_,
        closets0_.author_id as author_i4_1_,
        closets0_.clothes_info_id as clothes_5_1_,
        closets0_.colors_name as colors_n6_1_,
        closets0_.materials_name as material7_1_,
        closets0_.style_name as style_na8_1_ 
    from
        closets closets0_
Hibernate: 
    select
        members0_.id as id1_6_0_,
        members0_.email as email2_6_0_,
        members0_.image as image3_6_0_,
        members0_.name as name4_6_0_,
        members0_.nickname as nickname5_6_0_,
        members0_.password as password6_6_0_,
        members0_.phone as phone7_6_0_,
        members0_.refresh_token as refresh_8_6_0_,
        members0_.role as role9_6_0_ 
    from
        members members0_ 
    where
        members0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    select
        images0_.closets_post_id as closets_4_3_0_,
        images0_.id as id1_3_0_,
        images0_.id as id1_3_1_,
        images0_.closets_post_id as closets_4_3_1_,
        images0_.path as path2_3_1_,
        images0_.stores_post_id as stores_p5_3_1_,
        images0_.type as type3_3_1_,
        stores1_.id as id1_12_2_,
        stores1_.created_date as created_2_12_2_,
        stores1_.modified_date as modified3_12_2_,
        stores1_.author_id as author_i9_12_2_,
        stores1_.clothes_info_id as clothes10_12_2_,
        stores1_.colors_name as colors_11_12_2_,
        stores1_.materials_name as materia12_12_2_,
        stores1_.style_name as style_n13_12_2_,
        stores1_.clothes_length as clothes_4_12_2_,
        stores1_.content as content5_12_2_,
        stores1_.price as price6_12_2_,
        stores1_.sales_info_clothes_id as sales_i14_12_2_,
        stores1_.sales_info_status_id as sales_i15_12_2_,
        stores1_.sales_info_user_id as sales_i16_12_2_,
        stores1_.status as status7_12_2_,
        stores1_.title as title8_12_2_,
        members2_.id as id1_6_3_,
        members2_.email as email2_6_3_,
        members2_.image as image3_6_3_,
        members2_.name as name4_6_3_,
        members2_.nickname as nickname5_6_3_,
        members2_.password as password6_6_3_,
        members2_.phone as phone7_6_3_,
        members2_.refresh_token as refresh_8_6_3_,
        members2_.role as role9_6_3_,
        clothesinf3_.id as id1_2_4_,
        clothesinf3_.categoryl as category2_2_4_,
        clothesinf3_.categorys as category3_2_4_,
        clothesinf3_.fit as fit4_2_4_,
        clothesinf3_.length as length5_2_4_,
        colors4_.id as id1_4_5_,
        colors4_.name as name2_4_5_,
        materials5_.id as id1_5_6_,
        materials5_.name as name2_5_6_,
        style6_.id as id1_14_7_,
        style6_.name as name2_14_7_,
        salesinfoc7_.id as id1_9_8_,
        salesinfoc7_.clothes_brand as clothes_2_9_8_,
        salesinfoc7_.clothes_color as clothes_3_9_8_,
        salesinfoc7_.clothes_gender as clothes_4_9_8_,
        salesinfoc7_.clothes_size as clothes_5_9_8_,
        salesinfos8_.id as id1_10_9_,
        salesinfos8_.status_score as status_s2_10_9_,
        salesinfos8_.status_tag as status_t3_10_9_,
        salesinfos8_.status_times as status_t4_10_9_,
        salesinfos8_.status_when2buy as status_w5_10_9_,
        salesinfos8_.transport as transpor6_10_9_,
        salesinfou9_.id as id1_11_10_,
        salesinfou9_.user_height as user_hei2_11_10_,
        salesinfou9_.user_size as user_siz3_11_10_,
        salesinfou9_.user_weight as user_wei4_11_10_ 
    from
        clothes_image images0_ 
    left outer join
        stores stores1_ 
            on images0_.stores_post_id=stores1_.id 
    left outer join
        members members2_ 
            on stores1_.author_id=members2_.id 
    left outer join
        clothes_info clothesinf3_ 
            on stores1_.clothes_info_id=clothesinf3_.id 
    left outer join
        colors colors4_ 
            on stores1_.colors_name=colors4_.name 
    left outer join
        materials materials5_ 
            on stores1_.materials_name=materials5_.name 
    left outer join
        style style6_ 
            on stores1_.style_name=style6_.name 
    left outer join
        sales_info_clothes salesinfoc7_ 
            on stores1_.sales_info_clothes_id=salesinfoc7_.id 
    left outer join
        sales_info_status salesinfos8_ 
            on stores1_.sales_info_status_id=salesinfos8_.id 
    left outer join
        sales_info_user salesinfou9_ 
            on stores1_.sales_info_user_id=salesinfou9_.id 
    where
        images0_.closets_post_id=?
ClosetsImagesResponseDto(images=[[B@4c2afdad, [B@81e3e59], id=2835)
Hibernate: 
    select
        clothesima0_.id as id1_3_,
        clothesima0_.closets_post_id as closets_4_3_,
        clothesima0_.path as path2_3_,
        clothesima0_.stores_post_id as stores_p5_3_,
        clothesima0_.type as type3_3_ 
    from
        clothes_image clothesima0_
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    select
        closets0_.id as id1_1_0_,
        closets0_.created_date as created_2_1_0_,
        closets0_.modified_date as modified3_1_0_,
        closets0_.author_id as author_i4_1_0_,
        closets0_.clothes_info_id as clothes_5_1_0_,
        closets0_.colors_name as colors_n6_1_0_,
        closets0_.materials_name as material7_1_0_,
        closets0_.style_name as style_na8_1_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_ 
    from
        closets closets0_ 
    left outer join
        members members1_ 
            on closets0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on closets0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on closets0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on closets0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on closets0_.style_name=style5_.name 
    where
        closets0_.id=?
Hibernate: 
    delete 
    from
        clothes_image
Hibernate: 
    delete 
    from
        closets
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
