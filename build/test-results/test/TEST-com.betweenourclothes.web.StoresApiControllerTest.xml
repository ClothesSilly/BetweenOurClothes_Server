<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.betweenourclothes.web.StoresApiControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-11-10T02:33:08" hostname="user" time="1.184">
  <properties/>
  <testcase name="중고거래_검색" classname="com.betweenourclothes.web.StoresApiControllerTest" time="1.184"/>
  <system-out><![CDATA[11:33:01.882 [Test worker] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.betweenourclothes.web.StoresApiControllerTest]
11:33:01.888 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
11:33:01.896 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
11:33:01.915 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.betweenourclothes.web.StoresApiControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
11:33:01.922 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.betweenourclothes.web.StoresApiControllerTest], using SpringBootContextLoader
11:33:01.927 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.betweenourclothes.web.StoresApiControllerTest]: class path resource [com/betweenourclothes/web/StoresApiControllerTest-context.xml] does not exist
11:33:01.927 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.betweenourclothes.web.StoresApiControllerTest]: class path resource [com/betweenourclothes/web/StoresApiControllerTestContext.groovy] does not exist
11:33:01.927 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.betweenourclothes.web.StoresApiControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
11:33:01.928 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.betweenourclothes.web.StoresApiControllerTest]: StoresApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
11:33:01.963 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.040 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\user1\Desktop\송아\캡스톤\repo\between-our-clothes-server\build\classes\java\main\com\betweenourclothes\Application.class]
11:33:02.041 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.betweenourclothes.Application for test class com.betweenourclothes.web.StoresApiControllerTest
11:33:02.109 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.betweenourclothes.web.StoresApiControllerTest]: using defaults.
11:33:02.110 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
11:33:02.130 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@40afe7ec, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7307f9cd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5ff07e75, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2c6a8cca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@13458e2c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5f40d418, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@39f1a53, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@7b6bca36, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@44600f99, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1d59e319, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@66ef2f63, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@437073f2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a8a0c2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@553bda05]
11:33:02.133 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.133 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.137 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.137 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.137 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.137 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.140 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5f93de03 testClass = StoresApiControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77ace327 testClass = StoresApiControllerTest, locations = '{}', classes = '{class com.betweenourclothes.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2eabdcbb, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@13167aa6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@472865f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@39cbef8e], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]], class annotated with @DirtiesContext [false] with mode [null].
11:33:02.141 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.141 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.betweenourclothes.web.StoresApiControllerTest]
11:33:02.144 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5f93de03 testClass = StoresApiControllerTest, testInstance = com.betweenourclothes.web.StoresApiControllerTest@5d2e44e6, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@77ace327 testClass = StoresApiControllerTest, locations = '{}', classes = '{class com.betweenourclothes.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2eabdcbb, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@13167aa6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@472865f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@39cbef8e], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]].
11:33:02.157 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.7.RELEASE)

2022-11-10 11:33:02.336  INFO 10740 --- [    Test worker] c.b.web.StoresApiControllerTest          : Starting StoresApiControllerTest on user with PID 10740 (started by user1 in C:\Users\user1\Desktop\송아\캡스톤\repo\between-our-clothes-server)
2022-11-10 11:33:02.337  INFO 10740 --- [    Test worker] c.b.web.StoresApiControllerTest          : No active profile set, falling back to default profiles: default
2022-11-10 11:33:03.080  INFO 10740 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2022-11-10 11:33:03.198  INFO 10740 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111ms. Found 15 repository interfaces.
2022-11-10 11:33:03.566  INFO 10740 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f4914b77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-11-10 11:33:03.843  INFO 10740 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-10 11:33:03.862  INFO 10740 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-11-10 11:33:03.863  INFO 10740 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.22]
2022-11-10 11:33:03.969  INFO 10740 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-11-10 11:33:03.969  INFO 10740 --- [    Test worker] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1619 ms
2022-11-10 11:33:04.180  INFO 10740 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-11-10 11:33:04.530  INFO 10740 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-11-10 11:33:04.601  INFO 10740 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2022-11-10 11:33:04.661  INFO 10740 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2022-11-10 11:33:04.662  INFO 10740 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2022-11-10 11:33:04.794  INFO 10740 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2022-11-10 11:33:04.916  INFO 10740 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2022-11-10 11:33:05.925  INFO 10740 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-11-10 11:33:06.477  INFO 10740 --- [    Test worker] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2022-11-10 11:33:06.899  WARN 10740 --- [    Test worker] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-11-10 11:33:07.186  INFO 10740 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@ca8142, []
2022-11-10 11:33:07.250  INFO 10740 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25639434, org.springframework.security.web.context.SecurityContextPersistenceFilter@257d2151, org.springframework.security.web.header.HeaderWriterFilter@1164c755, org.springframework.security.web.authentication.logout.LogoutFilter@59388c17, com.betweenourclothes.jwt.JwtAuthenticationFilter@7a475c82, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37d8ca8c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40b923ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@103ae880, org.springframework.security.web.session.SessionManagementFilter@7e3de63b, org.springframework.security.web.access.ExceptionTranslationFilter@1328d346, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ee85ece]
2022-11-10 11:33:07.290  INFO 10740 --- [    Test worker] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2022-11-10 11:33:07.561  INFO 10740 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2022-11-10 11:33:07.842  INFO 10740 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2022-11-10 11:33:07.864  INFO 10740 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2022-11-10 11:33:07.898  INFO 10740 --- [    Test worker] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2022-11-10 11:33:08.086  INFO 10740 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: deleteUsingDELETE_1
2022-11-10 11:33:08.098  INFO 10740 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: findPostByIdUsingGET_1
2022-11-10 11:33:08.101  INFO 10740 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: findPostsByAllCategoryUsingGET_1
2022-11-10 11:33:08.115  INFO 10740 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: postUsingPOST_1
2022-11-10 11:33:08.118  INFO 10740 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPATCH_1
2022-11-10 11:33:08.148  INFO 10740 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 61814 (http) with context path ''
2022-11-10 11:33:08.150  INFO 10740 --- [    Test worker] c.b.web.StoresApiControllerTest          : Started StoresApiControllerTest in 5.992 seconds (JVM running for 6.92)
2022-11-10 11:33:08.293  INFO 10740 --- [o-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-11-10 11:33:08.293  INFO 10740 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-11-10 11:33:08.311  INFO 10740 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    update
        members 
    set
        email=?,
        image=?,
        name=?,
        nickname=?,
        password=?,
        phone=?,
        refresh_token=?,
        role=? 
    where
        id=?
2022-11-10 11:33:08.685  INFO 10740 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-11-10 11:33:08.685  INFO 10740 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-11-10 11:33:08.687  INFO 10740 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_,
        salesinfoc0_.clothes_brand as clothes_2_9_,
        salesinfoc0_.clothes_color as clothes_3_9_,
        salesinfoc0_.clothes_gender as clothes_4_9_,
        salesinfoc0_.clothes_size as clothes_5_9_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.clothes_brand=? 
        and salesinfoc0_.clothes_gender=? 
        and salesinfoc0_.clothes_size=? 
        and salesinfoc0_.clothes_color=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_,
        salesinfos0_.status_score as status_s2_10_,
        salesinfos0_.status_tag as status_t3_10_,
        salesinfos0_.status_times as status_t4_10_,
        salesinfos0_.status_when2buy as status_w5_10_,
        salesinfos0_.transport as transpor6_10_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.status_tag=? 
        and salesinfos0_.status_score=? 
        and salesinfos0_.status_times=? 
        and salesinfos0_.status_when2buy=? 
        and salesinfos0_.transport=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_,
        salesinfou0_.user_height as user_hei2_11_,
        salesinfou0_.user_size as user_siz3_11_,
        salesinfou0_.user_weight as user_wei4_11_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.user_size=? 
        and salesinfou0_.user_weight=? 
        and salesinfou0_.user_height=?
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        stores
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name, clothes_length, content, price, sales_info_clothes_id, sales_info_status_id, sales_info_user_id, status, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_,
        salesinfoc0_.clothes_brand as clothes_2_9_,
        salesinfoc0_.clothes_color as clothes_3_9_,
        salesinfoc0_.clothes_gender as clothes_4_9_,
        salesinfoc0_.clothes_size as clothes_5_9_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.clothes_brand=? 
        and salesinfoc0_.clothes_gender=? 
        and salesinfoc0_.clothes_size=? 
        and salesinfoc0_.clothes_color=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_,
        salesinfos0_.status_score as status_s2_10_,
        salesinfos0_.status_tag as status_t3_10_,
        salesinfos0_.status_times as status_t4_10_,
        salesinfos0_.status_when2buy as status_w5_10_,
        salesinfos0_.transport as transpor6_10_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.status_tag=? 
        and salesinfos0_.status_score=? 
        and salesinfos0_.status_times=? 
        and salesinfos0_.status_when2buy=? 
        and salesinfos0_.transport=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_,
        salesinfou0_.user_height as user_hei2_11_,
        salesinfou0_.user_size as user_siz3_11_,
        salesinfou0_.user_weight as user_wei4_11_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.user_size=? 
        and salesinfou0_.user_weight=? 
        and salesinfou0_.user_height=?
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        stores
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name, clothes_length, content, price, sales_info_clothes_id, sales_info_status_id, sales_info_user_id, status, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_,
        salesinfoc0_.clothes_brand as clothes_2_9_,
        salesinfoc0_.clothes_color as clothes_3_9_,
        salesinfoc0_.clothes_gender as clothes_4_9_,
        salesinfoc0_.clothes_size as clothes_5_9_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.clothes_brand=? 
        and salesinfoc0_.clothes_gender=? 
        and salesinfoc0_.clothes_size=? 
        and salesinfoc0_.clothes_color=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_,
        salesinfos0_.status_score as status_s2_10_,
        salesinfos0_.status_tag as status_t3_10_,
        salesinfos0_.status_times as status_t4_10_,
        salesinfos0_.status_when2buy as status_w5_10_,
        salesinfos0_.transport as transpor6_10_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.status_tag=? 
        and salesinfos0_.status_score=? 
        and salesinfos0_.status_times=? 
        and salesinfos0_.status_when2buy=? 
        and salesinfos0_.transport=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_,
        salesinfou0_.user_height as user_hei2_11_,
        salesinfou0_.user_size as user_siz3_11_,
        salesinfou0_.user_weight as user_wei4_11_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.user_size=? 
        and salesinfou0_.user_weight=? 
        and salesinfou0_.user_height=?
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        stores
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name, clothes_length, content, price, sales_info_clothes_id, sales_info_status_id, sales_info_user_id, status, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_,
        salesinfoc0_.clothes_brand as clothes_2_9_,
        salesinfoc0_.clothes_color as clothes_3_9_,
        salesinfoc0_.clothes_gender as clothes_4_9_,
        salesinfoc0_.clothes_size as clothes_5_9_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.clothes_brand=? 
        and salesinfoc0_.clothes_gender=? 
        and salesinfoc0_.clothes_size=? 
        and salesinfoc0_.clothes_color=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_,
        salesinfos0_.status_score as status_s2_10_,
        salesinfos0_.status_tag as status_t3_10_,
        salesinfos0_.status_times as status_t4_10_,
        salesinfos0_.status_when2buy as status_w5_10_,
        salesinfos0_.transport as transpor6_10_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.status_tag=? 
        and salesinfos0_.status_score=? 
        and salesinfos0_.status_times=? 
        and salesinfos0_.status_when2buy=? 
        and salesinfos0_.transport=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_,
        salesinfou0_.user_height as user_hei2_11_,
        salesinfou0_.user_size as user_siz3_11_,
        salesinfou0_.user_weight as user_wei4_11_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.user_size=? 
        and salesinfou0_.user_weight=? 
        and salesinfou0_.user_height=?
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        stores
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name, clothes_length, content, price, sales_info_clothes_id, sales_info_status_id, sales_info_user_id, status, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        style0_.id as id1_14_,
        style0_.name as name2_14_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_,
        materials0_.name as name2_5_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        colors0_.id as id1_4_,
        colors0_.name as name2_4_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_,
        clothesinf0_.categoryl as category2_2_,
        clothesinf0_.categorys as category3_2_,
        clothesinf0_.fit as fit4_2_,
        clothesinf0_.length as length5_2_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.categoryl=? 
        and clothesinf0_.categorys=? 
        and clothesinf0_.length=? 
        and clothesinf0_.fit=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_,
        salesinfoc0_.clothes_brand as clothes_2_9_,
        salesinfoc0_.clothes_color as clothes_3_9_,
        salesinfoc0_.clothes_gender as clothes_4_9_,
        salesinfoc0_.clothes_size as clothes_5_9_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.clothes_brand=? 
        and salesinfoc0_.clothes_gender=? 
        and salesinfoc0_.clothes_size=? 
        and salesinfoc0_.clothes_color=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_,
        salesinfos0_.status_score as status_s2_10_,
        salesinfos0_.status_tag as status_t3_10_,
        salesinfos0_.status_times as status_t4_10_,
        salesinfos0_.status_when2buy as status_w5_10_,
        salesinfos0_.transport as transpor6_10_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.status_tag=? 
        and salesinfos0_.status_score=? 
        and salesinfos0_.status_times=? 
        and salesinfos0_.status_when2buy=? 
        and salesinfos0_.transport=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_,
        salesinfou0_.user_height as user_hei2_11_,
        salesinfou0_.user_size as user_siz3_11_,
        salesinfou0_.user_weight as user_wei4_11_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.user_size=? 
        and salesinfou0_.user_weight=? 
        and salesinfou0_.user_height=?
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        clothes_image
        (closets_post_id, path, stores_post_id, type) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        stores
        (created_date, modified_date, author_id, clothes_info_id, colors_name, materials_name, style_name, clothes_length, content, price, sales_info_clothes_id, sales_info_status_id, sales_info_user_id, status, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        clothes_image 
    set
        closets_post_id=?,
        path=?,
        stores_post_id=?,
        type=? 
    where
        id=?
Hibernate: 
    select
        stores0_.id as id1_12_,
        stores0_.created_date as created_2_12_,
        stores0_.modified_date as modified3_12_,
        stores0_.author_id as author_i9_12_,
        stores0_.clothes_info_id as clothes10_12_,
        stores0_.colors_name as colors_11_12_,
        stores0_.materials_name as materia12_12_,
        stores0_.style_name as style_n13_12_,
        stores0_.clothes_length as clothes_4_12_,
        stores0_.content as content5_12_,
        stores0_.price as price6_12_,
        stores0_.sales_info_clothes_id as sales_i14_12_,
        stores0_.sales_info_status_id as sales_i15_12_,
        stores0_.sales_info_user_id as sales_i16_12_,
        stores0_.status as status7_12_,
        stores0_.title as title8_12_ 
    from
        stores stores0_
Hibernate: 
    select
        members0_.id as id1_6_0_,
        members0_.email as email2_6_0_,
        members0_.image as image3_6_0_,
        members0_.name as name4_6_0_,
        members0_.nickname as nickname5_6_0_,
        members0_.password as password6_6_0_,
        members0_.phone as phone7_6_0_,
        members0_.refresh_token as refresh_8_6_0_,
        members0_.role as role9_6_0_ 
    from
        members members0_ 
    where
        members0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_0_,
        salesinfoc0_.clothes_brand as clothes_2_9_0_,
        salesinfoc0_.clothes_color as clothes_3_9_0_,
        salesinfoc0_.clothes_gender as clothes_4_9_0_,
        salesinfoc0_.clothes_size as clothes_5_9_0_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.id=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_0_,
        salesinfos0_.status_score as status_s2_10_0_,
        salesinfos0_.status_tag as status_t3_10_0_,
        salesinfos0_.status_times as status_t4_10_0_,
        salesinfos0_.status_when2buy as status_w5_10_0_,
        salesinfos0_.transport as transpor6_10_0_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.id=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_0_,
        salesinfou0_.user_height as user_hei2_11_0_,
        salesinfou0_.user_size as user_siz3_11_0_,
        salesinfou0_.user_weight as user_wei4_11_0_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_0_,
        salesinfoc0_.clothes_brand as clothes_2_9_0_,
        salesinfoc0_.clothes_color as clothes_3_9_0_,
        salesinfoc0_.clothes_gender as clothes_4_9_0_,
        salesinfoc0_.clothes_size as clothes_5_9_0_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.id=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_0_,
        salesinfos0_.status_score as status_s2_10_0_,
        salesinfos0_.status_tag as status_t3_10_0_,
        salesinfos0_.status_times as status_t4_10_0_,
        salesinfos0_.status_when2buy as status_w5_10_0_,
        salesinfos0_.transport as transpor6_10_0_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.id=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_0_,
        salesinfou0_.user_height as user_hei2_11_0_,
        salesinfou0_.user_size as user_siz3_11_0_,
        salesinfou0_.user_weight as user_wei4_11_0_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_0_,
        salesinfoc0_.clothes_brand as clothes_2_9_0_,
        salesinfoc0_.clothes_color as clothes_3_9_0_,
        salesinfoc0_.clothes_gender as clothes_4_9_0_,
        salesinfoc0_.clothes_size as clothes_5_9_0_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.id=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_0_,
        salesinfos0_.status_score as status_s2_10_0_,
        salesinfos0_.status_tag as status_t3_10_0_,
        salesinfos0_.status_times as status_t4_10_0_,
        salesinfos0_.status_when2buy as status_w5_10_0_,
        salesinfos0_.transport as transpor6_10_0_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.id=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_0_,
        salesinfou0_.user_height as user_hei2_11_0_,
        salesinfou0_.user_size as user_siz3_11_0_,
        salesinfou0_.user_weight as user_wei4_11_0_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        colors0_.id as id1_4_0_,
        colors0_.name as name2_4_0_ 
    from
        colors colors0_ 
    where
        colors0_.name=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_0_,
        salesinfoc0_.clothes_brand as clothes_2_9_0_,
        salesinfoc0_.clothes_color as clothes_3_9_0_,
        salesinfoc0_.clothes_gender as clothes_4_9_0_,
        salesinfoc0_.clothes_size as clothes_5_9_0_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.id=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_0_,
        salesinfos0_.status_score as status_s2_10_0_,
        salesinfos0_.status_tag as status_t3_10_0_,
        salesinfos0_.status_times as status_t4_10_0_,
        salesinfos0_.status_when2buy as status_w5_10_0_,
        salesinfos0_.transport as transpor6_10_0_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.id=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_0_,
        salesinfou0_.user_height as user_hei2_11_0_,
        salesinfou0_.user_size as user_siz3_11_0_,
        salesinfou0_.user_weight as user_wei4_11_0_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.id=?
Hibernate: 
    select
        clothesinf0_.id as id1_2_0_,
        clothesinf0_.categoryl as category2_2_0_,
        clothesinf0_.categorys as category3_2_0_,
        clothesinf0_.fit as fit4_2_0_,
        clothesinf0_.length as length5_2_0_ 
    from
        clothes_info clothesinf0_ 
    where
        clothesinf0_.id=?
Hibernate: 
    select
        materials0_.id as id1_5_0_,
        materials0_.name as name2_5_0_ 
    from
        materials materials0_ 
    where
        materials0_.name=?
Hibernate: 
    select
        style0_.id as id1_14_0_,
        style0_.name as name2_14_0_ 
    from
        style style0_ 
    where
        style0_.name=?
Hibernate: 
    select
        salesinfoc0_.id as id1_9_0_,
        salesinfoc0_.clothes_brand as clothes_2_9_0_,
        salesinfoc0_.clothes_color as clothes_3_9_0_,
        salesinfoc0_.clothes_gender as clothes_4_9_0_,
        salesinfoc0_.clothes_size as clothes_5_9_0_ 
    from
        sales_info_clothes salesinfoc0_ 
    where
        salesinfoc0_.id=?
Hibernate: 
    select
        salesinfos0_.id as id1_10_0_,
        salesinfos0_.status_score as status_s2_10_0_,
        salesinfos0_.status_tag as status_t3_10_0_,
        salesinfos0_.status_times as status_t4_10_0_,
        salesinfos0_.status_when2buy as status_w5_10_0_,
        salesinfos0_.transport as transpor6_10_0_ 
    from
        sales_info_status salesinfos0_ 
    where
        salesinfos0_.id=?
Hibernate: 
    select
        salesinfou0_.id as id1_11_0_,
        salesinfou0_.user_height as user_hei2_11_0_,
        salesinfou0_.user_size as user_siz3_11_0_,
        salesinfou0_.user_weight as user_wei4_11_0_ 
    from
        sales_info_user salesinfou0_ 
    where
        salesinfou0_.id=?
2022-11-10 11:33:09.068  INFO 10740 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-11-10 11:33:09.068  INFO 10740 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-11-10 11:33:09.072  INFO 10740 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
gunsong2@naver.com
Hibernate: 
    select
        members0_.id as id1_6_,
        members0_.email as email2_6_,
        members0_.image as image3_6_,
        members0_.name as name4_6_,
        members0_.nickname as nickname5_6_,
        members0_.password as password6_6_,
        members0_.phone as phone7_6_,
        members0_.refresh_token as refresh_8_6_,
        members0_.role as role9_6_ 
    from
        members members0_ 
    where
        members0_.email=?
Hibernate: 
    select
        images1_.id as col_0_0_,
        stores0_.title as col_1_0_,
        stores0_.id as col_2_0_,
        stores0_.modified_date as col_3_0_,
        stores0_.price as col_4_0_,
        stores0_.content as col_5_0_,
        salesinfos2_.transport as col_6_0_,
        images1_.id as id1_3_,
        images1_.closets_post_id as closets_4_3_,
        images1_.path as path2_3_,
        images1_.stores_post_id as stores_p5_3_,
        images1_.type as type3_3_ 
    from
        stores stores0_ 
    inner join
        clothes_image images1_ 
            on stores0_.id=images1_.stores_post_id cross 
    join
        sales_info_status salesinfos2_ 
    where
        stores0_.sales_info_status_id=salesinfos2_.id 
        and (
            images1_.id in (
                select
                    clothesima3_.id 
                from
                    clothes_image clothesima3_ cross 
                join
                    stores stores4_ 
                where
                    clothesima3_.stores_post_id=stores4_.id 
                    and (
                        clothesima3_.closets_post_id is null
                    ) 
                group by
                    clothesima3_.stores_post_id 
                order by
                    stores4_.created_date asc
            )
        ) 
        and (
            stores0_.title like ? escape '!' 
            or stores0_.content like ? escape '!'
        ) 
    order by
        stores0_.created_date desc limit ?
Hibernate: 
    select
        stores0_.id as id1_12_0_,
        stores0_.created_date as created_2_12_0_,
        stores0_.modified_date as modified3_12_0_,
        stores0_.author_id as author_i9_12_0_,
        stores0_.clothes_info_id as clothes10_12_0_,
        stores0_.colors_name as colors_11_12_0_,
        stores0_.materials_name as materia12_12_0_,
        stores0_.style_name as style_n13_12_0_,
        stores0_.clothes_length as clothes_4_12_0_,
        stores0_.content as content5_12_0_,
        stores0_.price as price6_12_0_,
        stores0_.sales_info_clothes_id as sales_i14_12_0_,
        stores0_.sales_info_status_id as sales_i15_12_0_,
        stores0_.sales_info_user_id as sales_i16_12_0_,
        stores0_.status as status7_12_0_,
        stores0_.title as title8_12_0_,
        members1_.id as id1_6_1_,
        members1_.email as email2_6_1_,
        members1_.image as image3_6_1_,
        members1_.name as name4_6_1_,
        members1_.nickname as nickname5_6_1_,
        members1_.password as password6_6_1_,
        members1_.phone as phone7_6_1_,
        members1_.refresh_token as refresh_8_6_1_,
        members1_.role as role9_6_1_,
        clothesinf2_.id as id1_2_2_,
        clothesinf2_.categoryl as category2_2_2_,
        clothesinf2_.categorys as category3_2_2_,
        clothesinf2_.fit as fit4_2_2_,
        clothesinf2_.length as length5_2_2_,
        colors3_.id as id1_4_3_,
        colors3_.name as name2_4_3_,
        materials4_.id as id1_5_4_,
        materials4_.name as name2_5_4_,
        style5_.id as id1_14_5_,
        style5_.name as name2_14_5_,
        salesinfoc6_.id as id1_9_6_,
        salesinfoc6_.clothes_brand as clothes_2_9_6_,
        salesinfoc6_.clothes_color as clothes_3_9_6_,
        salesinfoc6_.clothes_gender as clothes_4_9_6_,
        salesinfoc6_.clothes_size as clothes_5_9_6_,
        salesinfos7_.id as id1_10_7_,
        salesinfos7_.status_score as status_s2_10_7_,
        salesinfos7_.status_tag as status_t3_10_7_,
        salesinfos7_.status_times as status_t4_10_7_,
        salesinfos7_.status_when2buy as status_w5_10_7_,
        salesinfos7_.transport as transpor6_10_7_,
        salesinfou8_.id as id1_11_8_,
        salesinfou8_.user_height as user_hei2_11_8_,
        salesinfou8_.user_size as user_siz3_11_8_,
        salesinfou8_.user_weight as user_wei4_11_8_ 
    from
        stores stores0_ 
    left outer join
        members members1_ 
            on stores0_.author_id=members1_.id 
    left outer join
        clothes_info clothesinf2_ 
            on stores0_.clothes_info_id=clothesinf2_.id 
    left outer join
        colors colors3_ 
            on stores0_.colors_name=colors3_.name 
    left outer join
        materials materials4_ 
            on stores0_.materials_name=materials4_.name 
    left outer join
        style style5_ 
            on stores0_.style_name=style5_.name 
    left outer join
        sales_info_clothes salesinfoc6_ 
            on stores0_.sales_info_clothes_id=salesinfoc6_.id 
    left outer join
        sales_info_status salesinfos7_ 
            on stores0_.sales_info_status_id=salesinfos7_.id 
    left outer join
        sales_info_user salesinfou8_ 
            on stores0_.sales_info_user_id=salesinfou8_.id 
    where
        stores0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/stores/post/search
       Parameters = {page=[0]}
          Headers = [Content-Type:"application/json", Authorization:"BearereyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJndW5zb25nMkBuYXZlci5jb20iLCJhdXRoIjoiUk9MRV9VU0VSIiwiZXhwIjoxNjY4MDU4Mzg4fQ.8CqZDb3dzJG-N35A8FVqFvjxImd47nh6dbP1ca-k2ck"]
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.betweenourclothes.web.StoresApiController
           Method = public org.springframework.http.ResponseEntity<org.springframework.data.domain.Page<com.betweenourclothes.web.dto.response.stores.StoresThumbnailsResponseDto>> com.betweenourclothes.web.StoresApiController.findByKeyword(org.springframework.data.domain.Pageable,com.betweenourclothes.web.dto.request.stores.StoresPostSearchRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"content":[{"image":"","title":"상의 블라우스","id":1745,"modified_date":"2022-11-10T11:33:09","price":"10000","content":"단돈 10000원에 팔아요~","transport":"직거래"}],"pageable":{"sort":{"sorted":false,"unsorted":true,"empty":true},"offset":0,"pageNumber":0,"pageSize":15,"paged":true,"unpaged":false},"totalElements":1,"totalPages":1,"last":true,"number":0,"size":15,"sort":{"sorted":false,"unsorted":true,"empty":true},"first":true,"numberOfElements":1,"empty":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
